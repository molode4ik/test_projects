version: "3.9"

services:
  postgres:
    container_name: test_db
    image: postgres:14.5
    command:
        - "postgres"
        - "-c"
        - "max_connections=50"
        - "-c"
        - "shared_buffers=1GB"
        - "-c"
        - "effective_cache_size=4GB"
        - "-c"
        - "work_mem=16MB"
        - "-c"
        - "maintenance_work_mem=512MB"
        - "-c"
        - "random_page_cost=1.1"
        - "-c"
        - "temp_file_limit=10GB"
        - "-c"
        - "log_min_duration_statement=200ms"
        - "-c"
        - "idle_in_transaction_session_timeout=3600s"
        - "-c"
        - "lock_timeout=1s"
        - "-c"
        - "statement_timeout=60s"
        - "-c"
        - "shared_preload_libraries=pg_stat_statements"
        - "-c"
        - "pg_stat_statements.max=10000"
        - "-c"
        - "pg_stat_statements.track=all"

    environment:
      POSTGRES_DB: "test_db"
      POSTGRES_USER: "pguser"
      POSTGRES_PASSWORD: "pgpassword"
      PGDATA: "/var/lib/postgresql/data/pgdata"

    volumes:
      - ../2. Init Database:/docker-entrypoint-initdb.d
      - .:/var/lib/postgresql/data

    ports:
      - "5432:5432"

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pguser -d test_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G

  redis:
    image: redis
    restart: always
    ports:
      - "6379:6379"

  webapp:
    restart: always
    build: .
    volumes:
      - ./:/app

    ports:
      - "8000:8000"

    depends_on:
      - postgres

    command: >
      sh -c "python manage.py makemigrations &&
      python manage.py migrate
      && python manage.py runserver 0.0.0.0:8000"

  worker:
    restart: always
    build: .
    volumes:
      - ./:/app

    depends_on:
      - postgres
      - redis
      - webapp

    command: 'celery -A proj worker -l info'

  beat:
    restart: always
    build: .
    volumes:
      - ./:/app

    depends_on:
      - postgres
      - redis
      - webapp
      - worker

    command: 'celery -A proj beat -l info'
